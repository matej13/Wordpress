apiVersion: v1
kind: Template
labels:
  template: itandtel-wordpress-mysql-persistent
metadata:
  annotations:
    description: ITandTel Wordpress template with mysql db
    tags: instant-app,php,wordpress,mysql
  creationTimestamp: null
  name: itandtel-wordpress
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      app: wordpress
    name: wordpress
  spec:
    accessModes:
    - ReadWriteOnce
    - ReadWriteMany
    resources:
      requests:
        storage: 256Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      template: mysql-persistent-template
    name: mysql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 512Mi
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/image.dockerRepositoryCheck: 2016-03-30T00:57:23Z
    creationTimestamp: null
    labels:
      app: wordpress
    name: php-56-rhel7
  spec:
    dockerImageRepository: registry.access.redhat.com/rhscl/php-56-rhel7
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: wordpress
    name: wordpress
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: wordpress
    name: wordpress
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: wordpress:latest
    postCommit: {}
    resources: {}
    source:
      git:
        uri: https://AleksLaz:m2DvrMm2zzAFdjha@bitbucket.org/cloudwerkstatt/openshift-wordpress.git
      secrets: null
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: registry.access.redhat.com/rhscl/php-56-rhel7:latest
      type: Docker
    triggers:
    - github:
        secret: KKOWudRQA3e1kSSsqMq7
      type: GitHub
    - generic:
        secret: lqmXdvDbhio8Wj3S7Alw
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      template: mysql-persistent-template
    name: mysql
  spec:
    replicas: 1
    selector:
      name: mysql
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: ${MYSQL_USER}
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${MYSQL_DATABASE}
          - name: TZ
            value: Europe/Vienna
          image: registry.access.redhat.com/rhscl/mysql-56-rhel7:latest
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /nfs/data/pv053-volume
            name: pv053-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pv053-volume
          persistentVolumeClaim:
            claimName: mysql
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:latest
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: wordpress
      name: wordpress
    name: wordpress
  spec:
    replicas: 1
    selector:
      app: wordpress
      deploymentconfig: wordpress
      name: wordpress
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/container.wordpress.image.entrypoint: '["container-entrypoint","/bin/sh","-c","$STI_SCRIPTS_PATH/usage"]'
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: wordpress
          deploymentconfig: wordpress
          name: wordpress
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: ${MYSQL_USER}
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: ENV_SUB_DOMAIN
            value: ${ENV_SUB_DOMAIN}
          - name: TZ
            value: Europe/Vienna
          image: wordpress:latest
          imagePullPolicy: Always
          name: wordpress
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /nfs/data/pv052-volume
            name: pv052-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: pv052-volume
          persistentVolumeClaim:
            claimName: wordpress
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - wordpress
        from:
          kind: ImageStreamTag
          name: wordpress:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: wordpress
    name: wordpress
  spec:
    host: wordpress-${PROJECT}.${ENV_SUB_DOMAIN}
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: wordpress
  status:
    ingress: null
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      template: mysql-persistent-template
    name: mysql
  spec:
    ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: mysql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: wordpress
    name: wordpress
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: wordpress
      deploymentconfig: wordpress
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
parameters:
- description: Database service name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: Username for MySQL user that will be used for accessing the database
  from: user[A-Z0-9]{3}
  generate: expression
  name: MYSQL_USER
  required: true
- description: Password for the MySQL user
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  required: true
- description: Database name
  name: MYSQL_DATABASE
  required: true
  value: wordpress
- description: Volume space available for data, e.g. 512Mi, 2Gi
  name: VOLUME_CAPACITY
  required: true
  value: 512Mi
- description: The default domain
  name: ENV_SUB_DOMAIN
  required: false
  value: playground.itandtel.at
- description: Project namespace
  name: PROJECT
  required: true
